# include <stdlib.h>
# include <stdio.h>

#define MAX 6

void merge(int arr[], int l, int m, int r)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 =  r - m;

    int L[MAX], R[MAX];

    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1+ j];

    i = 0; 
    j = 0; 
    k = l; 
    while (i < n1 && j < n2)
    {
        if (L[i] <= R[j])
        {
            arr[k] = L[i];
            i++;
        }
        else
        {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    while (i < n1)
    {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2)
    {
        arr[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int low, int high)
{
	int mid;

    if (low < high)
    {
     
        mid  = (low + high) /2;

        mergeSort(arr, low, mid);
        mergeSort(arr, mid + 1, high);

        merge(arr, low, mid, high);
    }
}

void printArray(int A[], int size)
{
    int i;

    for (i=0; i < size; i++)
        printf("%d ", A[i]);
    printf("\n");
}

int main()
{
    int arr[MAX];
	int i;

	printf ("\nenter array elements");

	for (i = 0; i < MAX; i++) {
		scanf ("%d", &arr[i]);
	}
    printf("Given array is \n");
    printArray(arr, MAX);

    mergeSort(arr, 0, MAX - 1);

    printf("\nSorted array is \n");
    printArray(arr, MAX);
    return 0;
}
